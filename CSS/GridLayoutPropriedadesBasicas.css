*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

.container{
    margin: 2rem auto;
    text-align: center;
}
.box{
    border: 1px solid #333;
    background-color: #999;
    min-height: 5rem;
}

.grid-container{
    display: grid;
    /* Para iniciar o trabalho com grid */
}

/* dEFINIR A COLUNA DO GRID */
.ex-01{
    grid-template-columns: 5rem 7rem 12rem 10rem;
    /* Utilizando O REM como unidade de medida */
}

.ex-02{
    grid-template-columns: 30% 20% 30% 20%;
    /* Utilizando O REM como unidade de porcentagem */
}

.ex-03{
    /* Grid tem sua propria unidade de medida  que a fração*/
    grid-template-columns: 1fr 2fr 1fr 3fr;
}

.ex-04{
    /*Quando quisermos definir colunas com a mesma largura podemos utilizar a propridade repeat seguida do numero de colunas e o valor que elas devem possur  */
    grid-template-columns: repeat(3, 1fr) 100px;
}

.ex-05{
    /* MINMAX SERVE PARA NOS DEFINIRMOS UM TAMANHO MINIMO E TAMANHO MAXIMO*/
    /* grid-template-columns: minmax(100px, 1fr) 2fr 2fr 1fr; */

    /* Outra forma de usar o MINMAX */
    grid-template-columns: repeat(4, minmax(100px, 200px));
}

/* Não sabe q quantidade de elemento que vai usar na grid */
.ex-06{
    /* Utilizando o auto-fit que so vai quebrar caso o valor seja maior que o tamanho da tela */
    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
}

.ex-07{
    /* Ele não vai se importar em quebrar a linhha, sempr */
    grid-template-columns: repeat(auto-fill, minmax(100px 1fr));
}

/* Grid para as linhas */
.ex-08{
    grid-template-rows: 20px 40px 60px 580px;
}